AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
    DBUsername:
        Type: String
    DBPassword:
        Type: String
    StripeKey:
        Type: String
    CMSApiUrl:
        Type: String
    CMSApiToken:
        Type: String
    CheckoutSuccessUrl:
        Type: String
    CheckoutCancelUrl:
        Type: String

Resources:
    # ==== API Gateway ====
    APIGatewayAPI:
        Type: AWS::Serverless::Api
        Properties:
            StageName: Prod
    # ==== Lambda ====
    CheckoutFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: checkout/
            Handler: app.lambdaHandler
            Runtime: nodejs16.x
            Environment:
                Variables:
                    STRIPE_KEY: !Ref StripeKey
                    API_URL: !Ref CMSApiUrl
                    API_TOKEN: !Ref CMSApiToken
                    SUCCESS_URL: !Ref CheckoutSuccessUrl
                    CANCEL_URL: !Ref CheckoutCancelUrl
            Architectures:
                - x86_64
            Events:
                GetCheckoutAPI:
                    Type: Api
                    Properties:
                        Path: /checkout/{bundleId}
                        Method: GET
                        RestApiId: !Ref APIGatewayAPI
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                Sourcemap: true
                EntryPoints:
                    - app.ts
    # ==== CloudFront ====
    CMSCloudFront:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Origins:
                    - DomainName: !Sub "${CMSImageBucket}.s3.amazonaws.com"
                      Id: CMSS3Bucket
                      S3OriginConfig:
                          OriginAccessIdentity: !Join ["", ["origin-access-identity/cloudfront/", !Ref CMSCloudFrontOAI]]
                Enabled: true
                DefaultCacheBehavior:
                    TargetOriginId: CMSS3Bucket
                    ViewerProtocolPolicy: allow-all
                    ForwardedValues:
                        QueryString: false
    CMSCloudFrontOAI:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
            CloudFrontOriginAccessIdentityConfig:
                Comment: "Restrict S3 access"
    # ==== S3 ====
    CMSImageBucket:
        Type: AWS::S3::Bucket
        Properties:
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
    CMSImageBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref CMSImageBucket
            PolicyDocument:
                Statement:
                    - Action: s3:GetObject
                      Effect: Allow
                      Resource: !Sub "arn:aws:s3:::${CMSImageBucket}/*"
                      Principal:
                          CanonicalUser: !GetAtt CMSCloudFrontOAI.S3CanonicalUserId
    # ==== RDS ====
    CMSDatabase:
        Type: "AWS::RDS::DBInstance"
        Properties:
            DBInstanceIdentifier: CMS
            DBName: strapi
            DBInstanceClass: db.t3.micro
            AllocatedStorage: 100
            Engine: postgres
            MasterUsername: !Ref DBUsername
            MasterUserPassword: !Ref DBPassword
            PubliclyAccessible: true
