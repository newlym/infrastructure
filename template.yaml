AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
    DBUsername:
        NoEcho: true
        Type: String
    DBPassword:
        NoEcho: true
        Type: String

Resources:
    CheckoutFunction:
        Type: AWS::Serverless::Function
        Properties:
            CodeUri: checkout/
            Handler: app.lambdaHandler
            Runtime: nodejs16.x
            Policies: AmazonDynamoDBFullAccess
            Architectures:
                - x86_64
            Events:
                GetCheckoutAPI:
                    Type: Api
                    Properties:
                        Path: /checkout/{checkoutId}
                        Method: GET
        Metadata:
            BuildMethod: esbuild
            BuildProperties:
                Minify: true
                Target: "es2020"
                Sourcemap: true
                EntryPoints:
                    - app.ts
    ResizeFunction:
        Type: AWS::Serverless::Function
        Properties:
            PackageType: Image
            Policies: AmazonS3FullAccess
            Architectures:
                - x86_64
            Events:
                ResizeImageAPI:
                    Type: Api
                    Properties:
                        Path: /resize/{file}
                        Method: GET
        Metadata:
            DockerTag: nodejs16.x-v1
            DockerContext: resize/
            Dockerfile: Dockerfile
    ResizeCloudFront:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Origins:
                    - DomainName: siav2s6634.execute-api.ap-southeast-2.amazonaws.com
                      Id: ResizeApi
                      OriginPath: /Prod/resize
                      CustomOriginConfig:
                          HTTPPort: 80
                          HTTPSPort: 443
                          OriginProtocolPolicy: https-only
                          OriginSSLProtocols:
                              - TLSv1.2
                Enabled: true
                DefaultCacheBehavior:
                    TargetOriginId: ResizeApi
                    ViewerProtocolPolicy: allow-all
                    OriginRequestPolicyId: !Ref ResizeCloudFrontOriginPolicy
                    CachePolicyId: !Ref ResizeCloudFrontCachePolicy
    ResizeCloudFrontOriginPolicy:
        Type: AWS::CloudFront::OriginRequestPolicy
        Properties:
            OriginRequestPolicyConfig:
                Name: ResizeCloudFrontOriginPolicy
                HeadersConfig:
                    HeaderBehavior: none
                CookiesConfig:
                    CookieBehavior: none
                QueryStringsConfig:
                    QueryStringBehavior: whitelist
                    QueryStrings:
                        - size
    ResizeCloudFrontCachePolicy:
        Type: AWS::CloudFront::CachePolicy
        Properties:
            CachePolicyConfig:
                Name: ResizeCloudFrontCachePolicy
                MinTTL: 1
                MaxTTL: 31536000
                DefaultTTL: 86400
                ParametersInCacheKeyAndForwardedToOrigin:
                    HeadersConfig:
                        HeaderBehavior: none
                    CookiesConfig:
                        CookieBehavior: none
                    EnableAcceptEncodingBrotli: true
                    EnableAcceptEncodingGzip: true
                    QueryStringsConfig:
                        QueryStringBehavior: whitelist
                        QueryStrings:
                            - size
    CheckoutConfigTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            TableName: CheckoutConfig
            AttributeDefinitions:
                - AttributeName: checkoutId
                  AttributeType: S
            KeySchema:
                - AttributeName: checkoutId
                  KeyType: HASH
            BillingMode: PAY_PER_REQUEST
    CMSDatabase:
        Type: "AWS::RDS::DBInstance"
        Properties:
            DBInstanceIdentifier: CMS
            DBName: strapi
            DBInstanceClass: db.t3.micro
            AllocatedStorage: 100
            Engine: postgres
            MasterUsername: !Ref DBUsername
            MasterUserPassword: !Ref DBPassword
            PubliclyAccessible: true
    RawImageBucket:
        Type: AWS::S3::Bucket
        Properties:
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
    ResizedImageBucket:
        Type: AWS::S3::Bucket
        Properties:
            PublicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
